{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Jack's Course Notes","text":"<p>This is my home page. I will use it to organize and share my course notes.</p> <p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"tutorials/rust-setup/","title":"Setting up a dev container for Rust:","text":"<ul> <li> <p>Primary author: Jack Coury</p> </li> <li> <p>Reviewer: Taylor Morris</p> </li> <li> <p>Site adapted from Comp 423 MKdocs Tutorial</p> </li> </ul>"},{"location":"tutorials/rust-setup/#phase-0-local-software-setup-what-you-need-on-your-computer-and-on-the-web","title":"Phase 0: Local Software Setup (what you need on your computer and on the web)","text":"<ol> <li> <p>A GitHub account:    If you don\u2019t have one yet, sign up at GitHub.</p> </li> <li> <p>Git installed:    Install Git if you don\u2019t already have it. Download Git here.</p> </li> <li> <p>Visual Studio Code (VS Code):    Download and install it from Visual Studio Code's website.</p> </li> <li> <p>Docker installed:    Required to run the dev container. Get Docker here.</p> </li> </ol>"},{"location":"tutorials/rust-setup/#phase-1-setup-repo-and-dev-container","title":"Phase 1: Setup Repo and Dev Container","text":""},{"location":"tutorials/rust-setup/#step-1-create-a-local-directory-and-initialize-git","title":"Step 1: Create a Local Directory and Initialize Git","text":"<ol> <li>Open VS Code and type `Ctrl + Shift + `` to open a new terminal.   </li> <li>Create a new directory: <pre><code>mkdir rust-project\n</code></pre></li> <li>Change into that directory (folder) with the command      <pre><code>cd rust-project\n</code></pre></li> <li>Initialize your Git repo with the command      <pre><code>git init\n</code></pre></li> <li>Create a README file by typing:     a.  <code>echo \u201c#Rust Project\u201d &gt; README.md</code>      b.  <code>git add README.md</code>     c.  <code>git commit -m \u201cInitial commit with README\u201d</code> </li> <li>Create a Remote Repository on GitHub     \u00a0\u00a0\u00a0\u00a0a.   Log in to your GitHub account and navigate to the Create a New Repository page and fill in the details as follows:         \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Repository Name: rust-project         \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Description: \"Rust project jcoury ex00\"         \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Visibility: Public  </li> <li>Click Create Repository</li> <li>Link your Local Repository to Github     a.  Add the GitHub repository as a remote with the command      <pre><code>\"git remote add origin https://github.com/&lt;your-username&gt;/rust-project.git\"\nreplacing &lt;your-username&gt; with your GitHub username  \n</code></pre>     , replacing  with your GitHub username     b.  Check your default branch name with the subcommand <code>git branch</code>. If it's not main, rename it to main with the following command:      <pre><code>git branch -M main\n</code></pre>     c.  Push your local commits to the GitHub repository with the following command      <pre><code>git push \u2013set-upstream origin main\n</code></pre>"},{"location":"tutorials/rust-setup/#step-2-add-development-container-configuration","title":"Step 2:  Add Development Container Configuration","text":"<ol> <li>Open up the rust-project directory via: File&gt;Open Folder  </li> <li>Install the Dev Containers extension for VS Code via the View tab.  </li> <li>Create a .devcontainer directory in the root of your project with the following file inside of this \"hidden\" configuration directory:         \u00a0\u00a0\u00a0\u00a0i.  .devcontainer/devcontainer.json         \u00a0\u00a0\u00a0\u00a0ii. Copy the following code into your .json file  </li> </ol> <p><pre><code>{\n  \"name\": \"Rust Dev Container\",\n  \"image\": \"mcr.microsoft.com/vscode/devcontainers/rust:latest\",  \n  \"customizations\": {\n    \"vscode\": {\n      \"settings\": {\n        \"rust-analyzer.cargo.runBuildScripts\": true,\n        \"rust-analyzer.procMacro.enable\": true\n      },\n      \"extensions\": [\n        \"rust-lang.rust-analyzer\"\n      ]\n    }\n  }\n}\n</code></pre> 10. Great! Almost Done! Now just press <code>Ctrl Shift P</code> and type in <code>Dev Containers: Reopen in Container</code> 11. Once it has fully opened open up another terminal and type  <pre><code>rustc --version\n</code></pre></p>"},{"location":"tutorials/rust-setup/#phase-3-write-your-first-program","title":"Phase 3: Write Your First Program!","text":"<ol> <li>Open up a new terminal and type  <pre><code>cargo new hello --vcs none\n</code></pre>     a. This creates a new folder with a file called main.rs inside it     b. Open up that file in your vs code file explorer and replace 'hello' with 'Hello COMP423', and save.   </li> <li>Go to your project directory by typing into the terminal  <pre><code>cd hello\n</code></pre></li> <li>Type <code>cargo build</code> into the terminal and then hit enter.      a. Cargo build compiles your program and creates an executable which it stores in another folder called 'target/debug' in your working directory.   </li> <li> <p>Run that executable in your terminal by typing  <pre><code>cargo run\n</code></pre> or  <pre><code>cargo run ./target/debug/hello\n</code></pre></p> </li> <li> <p>And Voila! you have written your first program in Rust!   </p> </li> <li>Dont forget to run through the git subcommands to push everything you created into your repo!  <pre><code>git add .  \ngit commit -m \"my first rust program\"\ngit push -u origin main\n</code></pre></li> </ol>"}]}